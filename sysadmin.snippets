

#-----------------
#creating a user
#-----------------

adduser <username>

# set a password to the user
passwd <username>

#-------------------
# to see the OS distribution and version
##
cat /etc/os-release

#--------------------
To list all available network interfaces in your system
##
ip link

#--------------------


#-----------------
To determine IP address of the system
ip address
OR
ip a
#-----------------
#-----------------
To determine hostname of the system
##
hostname
#-----------------

Network Manager

The NetworkManager is used to manage network settings of the system.

the configuration files for network management are stored at 
/etc/NetworkManager/system-connections/

to create and edit configurations from the command line, we can use the nmcli utility.

#------------------------
#To check the status of the network devices
#------------------------

nmcli dev status

#---------------------
#To display a list of all connections, 

nmcli con show

#To display all parameters of an available connection eth0,

nmcli con show eth0

#To set static IP address, modify the ipv4.addresses parameter of the eth0 ethernet connection

##
nmcli con mod eth0 ipvr.addresses <ip/cidr>

#The ipv4.method of the connection is set to auto by default. To be able to assign a static IP address, you need to modify the parameter to make it "manual" as follows
#
nmcli con mod eth0 ipvr.method manual

# To reflect the change, you need to reload the connection 
#
nmcli con reload
nmcli con up eth0

## To check the updated change
cat /etc/NetworkManager/system-connections/eth0.nmconnection


## The  file can also be used to update various other network parameters.

# on any change,remember to reload and "up" the connection
#
nmcli con reload
nmcli con up eth0
ip address


# To whos status of all network interfaces
nmcli dev status

# To list all connection profiles
nmcli con show

# Show current settings for a connection
nmcli con show <name>

#creating a connection 
nmcli con add con-name <name>

#modifying a connection
nmcli con mod name

#Disconnect the interface and/or current connection
nmcli dev dis dev

# Delete the specified connection
nmcli con del <name>
#
#------------------
#Hostname
#-----------------
# Two methods to manage hostname
# 1. hostnamectl
hostnamectl hostname <set-hostname>

# 2. nmcli
# to set hostname
nmcli general hostname <set-hostname>
# to verify hostname
# 1
nmcli general hostname
# 2
hostname
# 3
cat /etc/hostname
# 4
hostnamectl status


#-----------------------

Name Resolution
#--------------------
#
The /etc/hosts file is the temporary / local name resolution file.

To map hostname make an entry on the host in the temporary hostname resolution file
<ip> <hostname>

To verify - 
ping <hostname>

The ping should work by translating the hostname to IP address.

#----------------------
# Managing Users and Groups
# -----------------------
#
A user is an entity that requires permissions to do tasks on the system.
User Types
- Root user
- System users
- Regular users

# Users are listed in 
cat /etc/passwd

# to understand the passwd file
man 5 passwd

# to switch to another user

su - <anotheruser>

# to create a user account
useradd <username>

options
-g  -> to provide primary group id
-u  -> user id
-c  -> comment (to describe user)
-d  -> to provide home directory of user
-s  -> login shell (The first process to start when user logs in)

useradd [options] <username>


# To modify existing users
#
usermod
# modify user's login
usermod -l "newlogin-Name" <username>

# verify by 
cat /etc/passwd | grep <newlogin-Name>

#  Deleting user accounts

userdel [options] <username>

# option
userdel -r <username>

-r -> removes all data related to user

# Setting password
passwd <username>

# To check passwor parameters for a user

chage -l <username>

# To change password parameters for a user
chage <username>

#To display comprehensive user and password information
lslogins

# To Lock user account
1.
usermod -L <username>  # password in the shadow file will be preceded with a single exclamation mark. 

2.
passwd -l <username>  # password in the shadow file will be preceded with TWO exclamation marks.

# Managing Groups
#----------------

# to check groups of a user
1. 
groups <username>
2.
id <username>

# To create a group
#
groupadd [options] <groupname>

# View existing groups
cat /etc/group

# Adding existing users to group(s)
usermod -aG [groupname(,s)] <username>


# To remove from a supplementary group(s)
#  gpasswd

# modify group parameters
# groupmod


# To delete a group
groupdel <groupname>

#-------------------------------------------
#Permissions
#------------------------------------------

#creating / adding content to  files 

touch <filename>
cat > <filename>
echo "content" >> <filename>
vi <filename>

#creating directory
mkdir <dirname>

#deleting file
rm <filename>

#deleting empty dirrectory
rmdir <dirname>

#deleting non-empty directory
rm -r <dirname>

# Checking permissions of a directory/file
ls -ld <dirpath>
ls -l <filepath>

first column after the first character shows the permissions of the file/dir

r - read permission	- 4
w - write permission	- 2
x - execute permission	- 1
- - no permission	- 0 

rwxrwxrwx - permission triplet - (rwx) for user, group and others

permissions (symbolic or absolute/octal)

# to change a file permission
chmod <permission> <filename>

chmod 755 <filename>	# absolute permission
chmod g=rx,o-rx	<filen>	# symbolic permission
chmod o-r <filename> 	# to restrict others from reading
chmod o+r <filename>	# to permit others to read

# Changing ownership

chown <user>:<group> <path>	# Change user And group of a path
chown <user> <path>		# Change user of a path
chown :<group> <path>		# Change group of a path
chgrp <group> <path>		# Change group of a path

# Special Permission
# SUID	# [ Set Owner User ID ]
#
# First find the command of the  task that you want to take effect on 
which <command>
#eg. 
#If you want to allow others to  change passwords, the command is passwd

# by which <command> we get the path of the command file
ls -l <Executable-Path> # to verify permissions

# to apply permissions
chmod o+s <Executable-Path>

# When SUID bit is applied, users can execute the file like an owner.
# If the SUID bit is removed, other users cannot execute the file.
# SUID is set on executables, when it has to be run as owner, but credentials of owner is not to be shared. It cannot be set on shell scripts. 
# NOTE: When SUID is removed, others will not be able to execute the file, event if Others have execute permissions
#
#To remove permission
chmod g-s <executable-path>

# Sticky bit applied on a directory
# Used when files can have full permissions for everyone, but no one except the OWNER can delete the file in a directory
# # If the sticky bit is not applied, anyone who has rwx permission can delete a file within a directory, but with sticky bit applied, anyone who has rwx permission CANNOT delete a file, except the Owner.
# NOTE - Sticky bit is applied only on a directory, and works on contents of the directory.

# First give full permission to everyone
chmod 777 <dir>
# To apply sticky bit
chmod o+t <dir>


# Access Control Lists
#
# Usecase : To ensure that a directory is owned by root a user  while giving permission of OLD and NEW content in the directory to a user
# ACL - is used to specify permission to individual users  for a file or directory
setfacl -m u:<username>:<sym-permission> <dir/file>
setfacl -m g:<grupname>:<sym-permission> <dir/file>

# Options
-R - recursively apply ACLs on directory and existing contents
-d - recursively apply ALSs on directory and NEW contents
-m - to modify the ACLs

# To see existing ACLs
getfacl <path>


#------------------------------
#Processes
#------------------------------

# Process is a program in execution. 
# To list processes snapshot
ps

# To list details of processes
ps aux

a -> running processes from ALL users
u -> show user column
x -> processes not executed in terminal

# To display realtime overview of processes
top

# State of processes in the top command
R - Running / S - Sleeping / T - Stopped / Z - Zombie / Terminated

# Priority - PR - a process with higher priority number get more CPU time
#
# Nice - NI - value used to calculate priority of a process
# RES - physical memory used by the process
# SHR - share memory of the process
# %MEM - RAM percentage used by process
# VIRT - virtual memory used by process
# TIME+ total time of activity

# To alter the nice value of a process
renice <priority> <processid>
# Nice values range  -> -20 to 19
# Lower integer nice value corresponds to higher priority.
# ONLY root user can modify priority of process

#------------------------
#JOBS
#------------------------
# Each command on a shell has an associated job. 
#
# JOB - <TODO>

# To see a list of Jobs
jobs

# Foregrond PRocess - requires inputs from user, controlled by user.
# Background Process - non-interactive process, does not require human input.
#
# Executing process in background
 <command> &

# Moving background process to foreground
fg %job-id

# Moving foreground process to background
bg %job-id

# Killing a process
kill -l  # To list names and numbers of all available signals 

# To execute the kill command
kill -[signal] %job-id
kill -[signal] process-id

#eg.
kill -SIGTERM %1
